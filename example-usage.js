import { FastPDFGenerator } from './src/HospitalUtils/FastPDFGenerator.js';
import { PDFGenerator } from './src/HospitalUtils/PDFGenerator.js';

// Example HTML for a patient medical report
const patientReportHTML = `
<!DOCTYPE html>
<html>
<head>
    <title>Patient Medical Report</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            margin: 20px; 
            line-height: 1.6;
            color: #333;
        }
        .header { 
            background: #2c3e50; 
            color: white;
            padding: 20px; 
            margin-bottom: 30px; 
            border-radius: 5px;
        }
        .content { 
            margin: 20px 0; 
        }
        table { 
            width: 100%; 
            border-collapse: collapse; 
            margin: 20px 0; 
        }
        th, td { 
            border: 1px solid #ddd; 
            padding: 12px; 
            text-align: left; 
        }
        th { 
            background-color: #f8f9fa; 
            font-weight: bold;
        }
        .section { 
            margin: 30px 0; 
        }
        .footer { 
            margin-top: 40px; 
            padding: 20px; 
            background: #f8f9fa; 
            border-radius: 5px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üè• Patient Medical Report</h1>
        <p>Generated on: ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}</p>
    </div>
    
    <div class="content">
        <div class="section">
            <h2>üë§ Patient Information</h2>
            <table>
                <tr><th>Full Name</th><td>Sarah Johnson</td></tr>
                <tr><th>Date of Birth</th><td>March 15, 1985</td></tr>
                <tr><th>Age</th><td>38 years</td></tr>
                <tr><th>Gender</th><td>Female</td></tr>
                <tr><th>Contact Number</th><td>+1-555-0123</td></tr>
                <tr><th>Email</th><td>sarah.johnson@email.com</td></tr>
                <tr><th>Address</th><td>123 Medical Center Dr, Healthcare City, HC 12345</td></tr>
            </table>
        </div>
        
        <div class="section">
            <h2>üè• Medical Summary</h2>
            <p>Patient presents with routine checkup requirements. No immediate health concerns noted. 
            All vital signs are within normal ranges. Patient reports feeling well and maintaining 
            regular exercise routine.</p>
        </div>
        
        <div class="section">
            <h2>üìä Vital Signs</h2>
            <table>
                <tr><th>Measurement</th><th>Value</th><th>Normal Range</th><th>Status</th></tr>
                <tr><td>Blood Pressure</td><td>120/80 mmHg</td><td>90-140/60-90</td><td>‚úÖ Normal</td></tr>
                <tr><td>Heart Rate</td><td>72 bpm</td><td>60-100</td><td>‚úÖ Normal</td></tr>
                <tr><td>Temperature</td><td>98.6¬∞F</td><td>97-99¬∞F</td><td>‚úÖ Normal</td></tr>
                <tr><td>Respiratory Rate</td><td>16/min</td><td>12-20</td><td>‚úÖ Normal</td></tr>
                <tr><td>Oxygen Saturation</td><td>98%</td><td>95-100%</td><td>‚úÖ Normal</td></tr>
            </table>
        </div>
        
        <div class="section">
            <h2>üî¨ Laboratory Results</h2>
            <table>
                <tr><th>Test</th><th>Result</th><th>Normal Range</th><th>Status</th></tr>
                <tr><td>Hemoglobin</td><td>14.2 g/dL</td><td>12-16</td><td>‚úÖ Normal</td></tr>
                <tr><td>White Blood Cells</td><td>7,500/ŒºL</td><td>4,500-11,000</td><td>‚úÖ Normal</td></tr>
                <tr><td>Platelets</td><td>250,000/ŒºL</td><td>150,000-450,000</td><td>‚úÖ Normal</td></tr>
                <tr><td>Glucose (Fasting)</td><td>95 mg/dL</td><td>70-100</td><td>‚úÖ Normal</td></tr>
                <tr><td>Cholesterol Total</td><td>180 mg/dL</td><td><200</td><td>‚úÖ Normal</td></tr>
            </table>
        </div>
        
        <div class="section">
            <h2>üíä Current Medications</h2>
            <ul>
                <li>Multivitamin - Daily</li>
                <li>Omega-3 Supplement - Daily</li>
                <li>No prescription medications</li>
            </ul>
        </div>
        
        <div class="section">
            <h2>üìã Recommendations</h2>
            <ul>
                <li>Continue current exercise routine (30 minutes daily)</li>
                <li>Maintain healthy diet with increased fiber intake</li>
                <li>Schedule follow-up appointment in 6 months</li>
                <li>Consider annual flu vaccination</li>
                <li>Continue regular blood pressure monitoring</li>
            </ul>
        </div>
    </div>
    
    <div class="footer">
        <p><strong>Report Generated by:</strong> Dr. Michael Chen, MD</p>
        <p><strong>Medical Center:</strong> Healthcare Excellence Hospital</p>
        <p><strong>Contact:</strong> (555) 123-4567 | info@healthcare-excellence.com</p>
    </div>
</body>
</html>
`;

async function demonstrateFastPDFGeneration() {
    console.log('üöÄ Demonstrating Fast PDF Generation...\n');
    
    try {
        // Example 1: Fast PDF Generator (Recommended)
        console.log('üìÑ Generating PDF with FastPDFGenerator...');
        const startTime = Date.now();
        
        const pdfUrl = await FastPDFGenerator.generate({
            html: patientReportHTML,
            filename: 'patient-report-sarah-johnson.pdf',
            upload: true,
            folder: 'medical_reports',
            useCache: true
        });
        
        const generationTime = Date.now() - startTime;
        console.log(`‚úÖ PDF generated in ${generationTime}ms`);
        console.log(`üìé PDF URL: ${pdfUrl}\n`);
        
        // Example 2: Cached generation (should be much faster)
        console.log('üîÑ Testing cached generation...');
        const cacheStartTime = Date.now();
        
        const cachedPdfUrl = await FastPDFGenerator.generate({
            html: patientReportHTML,
            filename: 'patient-report-sarah-johnson-cached.pdf',
            upload: true,
            folder: 'medical_reports',
            useCache: true
        });
        
        const cacheTime = Date.now() - cacheStartTime;
        console.log(`‚ö° Cached PDF generated in ${cacheTime}ms`);
        console.log(`üìé Cached PDF URL: ${cachedPdfUrl}\n`);
        
        // Example 3: Local file generation (no upload)
        console.log('üíæ Generating local PDF file...');
        const localStartTime = Date.now();
        
        const localPath = await FastPDFGenerator.generate({
            html: patientReportHTML,
            filename: 'patient-report-local.pdf',
            upload: false,
            useCache: false
        });
        
        const localTime = Date.now() - localStartTime;
        console.log(`üìÅ Local PDF generated in ${localTime}ms`);
        console.log(`üìÇ File saved to: ${localPath}\n`);
        
        console.log('üéØ Performance Summary:');
        console.log(`- First generation: ${generationTime}ms`);
        console.log(`- Cached generation: ${cacheTime}ms`);
        console.log(`- Local generation: ${localTime}ms`);
        console.log(`- Performance improvement: ${Math.round((generationTime - cacheTime) / generationTime * 100)}% faster with caching`);
        
    } catch (error) {
        console.error('‚ùå Error generating PDF:', error.message);
    }
}

// Run the demonstration
demonstrateFastPDFGeneration()
    .then(() => {
        console.log('\n‚úÖ Demonstration completed successfully!');
        console.log('\nüí° Tips:');
        console.log('- Use FastPDFGenerator for best performance');
        console.log('- Enable caching for repeated PDFs');
        console.log('- Start Redis with: docker-compose up -d redis');
        console.log('- Monitor generation times in production');
    })
    .catch(error => {
        console.error('‚ùå Demonstration failed:', error);
    });